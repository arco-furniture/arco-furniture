{"version":3,"file":"static/js/Product.e36df340.chunk.js","mappings":"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","sources":["pages/product/ProductParams.tsx","pages/product/ProductPreview.tsx","pages/product/ProductSlides.tsx","pages/product/ProductSpecs.tsx","services/product.service.ts","pages/product/Product.tsx","../node_modules/@mui/icons-material/CloseOutlined.js"],"sourcesContent":["import React, { memo, useEffect, useState } from 'react'\nimport Chip from '@mui/material/Chip'\nimport { Button, IconButton } from '@mui/material'\nimport { Favorite, FavoriteBorder } from '@mui/icons-material'\nimport { getPriceWithFormat } from '../../utils/getPriceWithFormat'\nimport BlackTooltip from '../../components/BlackTooltip/BlackTooltip'\nimport { colorsTypes, IItem } from '../../types/itemTypes'\nimport { getBasketItem } from '../../utils/getBasketItem'\nimport { colors } from 'app/constants'\nimport { useProduct } from '../../hooks/useStateSelectors'\nimport { useActions } from '../../hooks/useActions'\nimport { getFavoriteFromLS } from '../../utils/getFavoriteFromLS'\nimport { handleChangeFavorite } from '../../utils/handleChangeFavorite'\nimport { getPrefixTitle } from '../../utils/getPrefixTitle'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nconst ProductParams: React.FC<any> = ({ product }) => {\n  const styleSubmit = { fontSize: '18px', fontWeight: 700 }\n  const [isLiked, setIsLiked] = useState(false)\n  const { currentColor } = useProduct()\n  const { favorites } = getFavoriteFromLS()\n  const { addItemForBasket, openAlertBar, setCurrentColor, setItemIsLiked } = useActions()\n  const isFavorite = favorites.some((favorite: IItem) => favorite._id === product._id)\n\n  const existColors = colors.map((item) => {\n    const isExist = product.colors?.some((color) => color.nameColor === item.nameColor)\n    return {\n      nameColor: item.nameColor,\n      color: item.color,\n      exist: isExist,\n    }\n  })\n\n  useEffect(() => {\n    if (isFavorite) {\n      setIsLiked(true)\n    }\n  }, [])\n\n  useEffect(() => {\n    const isLoading = Object.keys(product).length\n    if (isLoading) {\n      const currentColor = existColors.find((item) => item.exist)\n      const index = existColors.indexOf(currentColor)\n      setCurrentColor({ index, ...currentColor })\n    }\n  }, [product])\n\n  const handleCurrentColor = (obj: colorsTypes) => {\n    return {\n      borderRadius: '5px',\n      backgroundColor: obj.color,\n      transition: 'transform ease-in-out 0.1s',\n    }\n  }\n\n  const ChipSuccess = () => {\n    return <Chip label='В наличии' color='success' variant='filled' />\n  }\n\n  const ChipError = () => {\n    return <Chip label='Под заказ' color='error' variant='filled' />\n  }\n\n  const handlerOnClickBuy = () => {\n    openAlertBar({\n      message: product.title,\n      type: 'cart',\n    })\n    const basketItem = getBasketItem(product, currentColor.color)\n    addItemForBasket(basketItem)\n  }\n\n  const onClickFavoriteButton = () => {\n    handleChangeFavorite({ isFavorite, item: product })\n    setIsLiked(!isLiked)\n    setItemIsLiked()\n    openAlertBar({\n      message: product.title,\n      type: 'favorite',\n    })\n  }\n\n  return (\n    <div className='product__params panel'>\n      <div className='product__top-wrapper'>\n        <h2>{getPrefixTitle(product)}</h2>\n        {currentColor.exist ? <ChipSuccess /> : <ChipError />}\n      </div>\n      <div className='product__price-wrapper'>\n        <p className='product__old-price'>\n          <span className='old-price'>{getPriceWithFormat(product.oldPrice)}</span> &#8381;\n        </p>\n        <em className='product__price'>{getPriceWithFormat(product.price)} &#8381;</em>\n      </div>\n      <div className='product__colors'>\n        <h3 className='product__title'>Цвета исполнения:</h3>\n        <ul>\n          {existColors.map((item: colorsTypes, index: number) => {\n            const isActive = currentColor.index === index\n            return (\n              <li key={index}>\n                <span\n                  className={`product__light ${isActive ? 'product__light_active' : 'product__light_disabled'}`}\n                  style={{ border: `3px solid ${isActive && item.exist ? '#4675CE' : '#d32f2f'}` }}\n                />\n                <Button\n                  onClick={() =>\n                    setCurrentColor({\n                      index,\n                      color: item.color,\n                      nameColor: item.nameColor,\n                      exist: item.exist,\n                    })\n                  }\n                  style={handleCurrentColor(item)}\n                  variant='contained'\n                >\n                  {!item.exist && <CloseOutlinedIcon className='product__closeIcon' />}\n                </Button>\n              </li>\n            )\n          })}\n        </ul>\n        {!currentColor.exist && <p className='product__text-error'>К сожалению данного цвета нет в наличии</p>}\n      </div>\n      <div className='product__description'>\n        <p>\n          <span className='product__title'>Описание: </span>\n          {product.description}\n        </p>\n      </div>\n      <div className='product__buttons'>\n        <Button\n          disabled={!currentColor.exist}\n          style={styleSubmit}\n          className='product__submit'\n          size='large'\n          type='submit'\n          variant='contained'\n          onClick={handlerOnClickBuy}\n        >\n          добавить в корзину\n        </Button>\n        <BlackTooltip title='Добавить в избранное' placement='top-start'>\n          <IconButton className='product__favorite' size='large' color='error' onClick={() => onClickFavoriteButton()}>\n            {isLiked ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </BlackTooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(ProductParams)\n","import { Swiper, SwiperSlide } from 'swiper/react'\nimport { FreeMode, Navigation, Thumbs } from 'swiper'\nimport React, { memo, useRef } from 'react'\nimport { IProductPreview } from './types'\nimport { SwiperArrows } from '../../components'\n\nconst ProductPreview: React.FC<IProductPreview> = ({ thumbsSwiper, images }) => {\n  const nextRef = useRef(null)\n  const prevRef = useRef(null)\n\n  const slides = images?.map((item, index) => {\n    return (\n      <SwiperSlide key={index}>\n        <img className='product__image-preview' src={item.image} alt='image' />\n      </SwiperSlide>\n    )\n  })\n\n  return (\n    <li className='product__preview'>\n      <Swiper\n        loop\n        spaceBetween={40}\n        thumbs={{ swiper: thumbsSwiper && !thumbsSwiper.destroyed ? thumbsSwiper : null }}\n        modules={[FreeMode, Navigation, Thumbs]}\n        navigation={{\n          prevEl: prevRef.current,\n          nextEl: nextRef.current,\n        }}\n        onBeforeInit={(swiper: any) => {\n          swiper.params.navigation.prevEl = prevRef.current\n          swiper.params.navigation.nextEl = nextRef.current\n        }}\n      >\n        {slides}\n      </Swiper>\n      <SwiperArrows prevRef={prevRef} nextRef={nextRef} widthValue={105} />\n    </li>\n  )\n}\n\nexport default memo(ProductPreview)\n","import { Swiper, SwiperSlide } from 'swiper/react'\nimport { Thumbs } from 'swiper'\nimport { IProductSlides } from './types'\nimport React, { memo } from 'react'\n\nconst ProductSlides: React.FC<IProductSlides> = ({ setThumbsSwiper, images }) => {\n  const navSlides = images?.map((item, index) => {\n    return (\n      <SwiperSlide key={index}>\n        <div className='product__nav'>\n          <span className='product__background' />\n          <img className='product__nav-preview' src={item.image} alt='slide' />\n        </div>\n      </SwiperSlide>\n    )\n  })\n\n  return (\n    <li className='product__slides'>\n      <div className='product__slides-wrapper'>\n        <Swiper\n          onSwiper={setThumbsSwiper}\n          spaceBetween={10}\n          slidesPerView={4}\n          freeMode\n          watchSlidesProgress\n          modules={[Thumbs]}\n          className='mySwiper'\n        >\n          {navSlides}\n        </Swiper>\n      </div>\n    </li>\n  )\n}\n\nexport default memo(ProductSlides)\n","import React, { memo } from 'react'\nimport { specsNamesTypes } from './types'\nimport { specsNames } from 'app/constants'\n\nconst ProductSpecs: React.FC<any> = ({ specs }) => {\n  return (\n    <li className='product__specs panel'>\n      <h3 className='subtitle'>Характеристики</h3>\n      <div className='product__specs-wrapper'>\n        <ul>\n          {specsNames?.map((item: specsNamesTypes) => (\n            <li key={item.specsNameId}>{`${item.name}:`}</li>\n          ))}\n        </ul>\n        <ul>\n          {specs?.map((item, index) => (\n            <li key={index}>{Object.values(item)}</li>\n          ))}\n        </ul>\n      </div>\n    </li>\n  )\n}\n\nexport default memo(ProductSpecs)\n","import { API_URL, getProductUrl } from '../configs/config'\nimport { axiosClassic } from '../api/interceptors'\n\nexport const ProductService = {\n  async getProduct(id: string) {\n    const { data } = await axiosClassic.get(`${API_URL}${getProductUrl(`/${id}`)}`)\n    return data\n  },\n}\n","import React, { memo, useState } from 'react'\nimport { ProductParams, ProductSpecs, ProductSlides, ProductPreview } from './index'\nimport { useParams } from 'react-router-dom'\nimport { useQuery } from 'react-query'\nimport { ProductService } from '../../services/product.service'\n\nconst Product = () => {\n  const [thumbsSwiper, setThumbsSwiper] = useState(null)\n  const { productId } = useParams()\n  const { data, isSuccess } = useQuery('get product', () => ProductService.getProduct(productId))\n\n  return (\n    isSuccess && (\n      <section className='product'>\n        <ul className='product__wrapper'>\n          <ProductPreview thumbsSwiper={thumbsSwiper} images={data.productImages} />\n          <ProductParams product={data} />\n          <ProductSlides setThumbsSwiper={setThumbsSwiper} images={data.productImages} />\n          <ProductSpecs specs={data.specs} />\n        </ul>\n      </section>\n    )\n  )\n}\n\nexport default memo(Product)\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');\n\nexports.default = _default;"],"names":["ProductParams","product","useState","isLiked","setIsLiked","currentColor","useProduct","favorites","getFavoriteFromLS","useActions","addItemForBasket","openAlertBar","setCurrentColor","setItemIsLiked","isFavorite","some","favorite","_id","existColors","colors","item","isExist","color","nameColor","exist","useEffect","Object","keys","length","find","index","indexOf","ChipSuccess","Chip","label","variant","ChipError","className","getPrefixTitle","getPriceWithFormat","oldPrice","price","map","obj","isActive","style","border","Button","onClick","borderRadius","backgroundColor","transition","CloseOutlined","description","disabled","fontSize","fontWeight","size","type","message","title","basketItem","getBasketItem","BlackTooltip","placement","IconButton","handleChangeFavorite","Favorite","FavoriteBorder","memo","ProductPreview","thumbsSwiper","images","nextRef","useRef","prevRef","slides","src","image","alt","loop","spaceBetween","thumbs","swiper","destroyed","modules","FreeMode","Navigation","Thumbs","navigation","prevEl","current","nextEl","onBeforeInit","params","widthValue","ProductSlides","setThumbsSwiper","navSlides","onSwiper","slidesPerView","freeMode","watchSlidesProgress","ProductSpecs","specs","specsNames","name","specsNameId","values","ProductService","id","axiosClassic","API_URL","getProductUrl","data","Product","productId","useParams","useQuery","isSuccess","productImages","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}