{"version":3,"file":"static/js/Product.47adaff6.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/CloseOutlined.js","pages/product/ProductParams.tsx","pages/product/ProductSpecs.tsx","pages/product/ProductSlides.tsx","pages/product/ProductPreview.tsx","services/product.service.ts","pages/product/Product.tsx"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');","import React, { memo, useEffect, useState } from 'react'\nimport { COLORS } from 'app/constants'\nimport { useProduct } from '../../hooks/useStateSelectors'\nimport { useActions } from '../../hooks/useActions'\nimport { Button, IconButton, Chip } from '@mui/material'\nimport { Favorite, FavoriteBorder, CloseOutlined } from '@mui/icons-material'\nimport { getPriceWithFormat } from '../../utils/getPriceWithFormat'\nimport { BlackTooltip } from 'components'\nimport { IItem, IProductParams } from '../../types/itemTypes'\nimport { getBasketItem } from '../../utils/getBasketItem'\nimport { getFavoriteFromLS } from '../../utils/getFavoriteFromLS'\nimport { handleChangeFavorite } from '../../utils/handleChangeFavorite'\nimport { getPrefixTitle } from '../../utils/getPrefixTitle'\nimport { colorType } from '../../types/constantsTypes'\n\nconst ProductParams: React.FC<IProductParams> = ({ product }): JSX.Element => {\n  const styleSubmit = { fontSize: '18px', fontWeight: 700 }\n  const [isLiked, setIsLiked] = useState<boolean>(false)\n  const { currentColor } = useProduct()\n  const { favorites } = getFavoriteFromLS()\n  const { addItemForBasket, openAlertBar, setCurrentColor, setItemIsLiked } = useActions()\n  const isFavorite = favorites.some((favorite: IItem) => favorite._id === product._id)\n\n  const existColors = COLORS.map((item): colorType => {\n    const isExist = product.colors?.some((color: colorType) => color.nameColor === item.nameColor)\n    return {\n      nameColor: item.nameColor,\n      color: item.color,\n      exist: isExist,\n    }\n  })\n\n  useEffect(() => {\n    if (isFavorite) {\n      setIsLiked(true)\n    }\n  }, [])\n\n  useEffect(() => {\n    const isLoading = Object.keys(product).length\n    if (isLoading) {\n      const currentColor = existColors.find((item) => item.exist)\n      const index = existColors.indexOf(currentColor)\n      setCurrentColor({ index, ...currentColor })\n    }\n  }, [product])\n\n  const handleCurrentColor = (obj: colorType) => {\n    return {\n      borderRadius: '5px',\n      backgroundColor: obj.color,\n      transition: 'transform ease-in-out 0.1s',\n    }\n  }\n\n  const ChipSuccess = () => {\n    return <Chip label='В наличии' color='success' variant='filled' />\n  }\n\n  const ChipError = () => {\n    return <Chip label='Под заказ' color='error' variant='filled' />\n  }\n\n  const handlerOnClickBuy = () => {\n    openAlertBar({\n      message: product.title,\n      type: 'cart',\n    })\n    const basketItem = getBasketItem(product, currentColor.color)\n    addItemForBasket(basketItem)\n  }\n\n  const onClickFavoriteButton = () => {\n    handleChangeFavorite({ isFavorite, item: product })\n    setIsLiked(!isLiked)\n    setItemIsLiked()\n    openAlertBar({\n      message: product.title,\n      type: 'favorite',\n    })\n  }\n\n  return (\n    <div className='product__params panel'>\n      <div className='product__top-wrapper'>\n        <h2>{getPrefixTitle(product)}</h2>\n        {currentColor.exist ? <ChipSuccess /> : <ChipError />}\n      </div>\n      <div className='product__price-wrapper'>\n        <p className='product__old-price'>\n          <span className='old-price'>{getPriceWithFormat(product.oldPrice)}</span> &#8381;\n        </p>\n        <em className='product__price'>{getPriceWithFormat(product.price)} &#8381;</em>\n      </div>\n      <div className='product__colors'>\n        <h3 className='product__title'>Цвета исполнения:</h3>\n        <ul>\n          {existColors.map((item: colorType, index: number) => {\n            const isActive = currentColor.index === index\n            return (\n              <li key={index}>\n                <span\n                  className={`product__light ${isActive ? 'product__light_active' : 'product__light_disabled'}`}\n                  style={{ border: `3px solid ${isActive ? '#4675CE' : '#fff'}` }}\n                />\n                <Button\n                  onClick={() =>\n                    setCurrentColor({\n                      index,\n                      color: item.color,\n                      nameColor: item.nameColor,\n                      exist: item.exist,\n                    })\n                  }\n                  style={handleCurrentColor(item)}\n                  variant='contained'\n                >\n                  {!item.exist && <CloseOutlined className='product__closeIcon' />}\n                </Button>\n              </li>\n            )\n          })}\n        </ul>\n        {!currentColor.exist && <p className='product__text-error'>К сожалению данного цвета нет в наличии</p>}\n      </div>\n      <div className='product__description'>\n        <p>\n          <span className='product__title'>Описание: </span>\n          {product.description}\n        </p>\n      </div>\n      <div className='product__buttons'>\n        <Button\n          disabled={!currentColor.exist}\n          style={styleSubmit}\n          className='product__submit'\n          size='large'\n          type='submit'\n          variant='contained'\n          onClick={handlerOnClickBuy}\n        >\n          добавить в корзину\n        </Button>\n        <BlackTooltip title='Добавить в избранное' placement='top-start'>\n          <IconButton className='product__favorite' size='large' color='error' onClick={() => onClickFavoriteButton()}>\n            {isLiked ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </BlackTooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(ProductParams)\n","import React, { memo } from 'react'\nimport { IProductSpecs, specsNamesTypes } from './types'\nimport { SPECS_NAME } from 'app/constants'\n\nconst ProductSpecs: React.FC<IProductSpecs> = ({ specs }) => (\n  <li className='product__specs panel'>\n    <h3 className='subtitle'>Характеристики</h3>\n    <div className='product__specs-wrapper'>\n      <ul>\n        {SPECS_NAME?.map((item: specsNamesTypes) => (\n          <li key={item.specsNameId}>{`${item.name}:`}</li>\n        ))}\n      </ul>\n      <ul>\n        {specs?.map((item, index) => (\n          <li key={index}>{Object.values(item)}</li>\n        ))}\n      </ul>\n    </div>\n  </li>\n)\n\nexport default memo(ProductSpecs)\n","import { Swiper, SwiperSlide } from 'swiper/react'\nimport { Thumbs } from 'swiper'\nimport { IProductSlides } from './types'\nimport React, { memo } from 'react'\nimport { imageTypes } from '../../types/itemTypes'\n\nconst ProductSlides: React.FC<IProductSlides> = ({ setThumbsSwiper, images }): JSX.Element => {\n  const navSlides = images?.map((item: imageTypes, index: number) => (\n    <SwiperSlide key={index}>\n      <div className='product__nav'>\n        <span className='product__background' />\n        <img className='product__nav-preview' src={item.image} alt='slide' />\n      </div>\n    </SwiperSlide>\n  ))\n\n  return (\n    <li className='product__slides'>\n      <div className='product__slides-wrapper'>\n        <Swiper\n          onSwiper={setThumbsSwiper}\n          spaceBetween={10}\n          slidesPerView={4}\n          freeMode\n          watchSlidesProgress\n          modules={[Thumbs]}\n          className='mySwiper'\n        >\n          {navSlides}\n        </Swiper>\n      </div>\n    </li>\n  )\n}\n\nexport default memo(ProductSlides)\n","import { Swiper, SwiperSlide } from 'swiper/react'\nimport { FreeMode, Navigation, Thumbs } from 'swiper'\nimport React, { memo, useRef } from 'react'\nimport { IProductPreview } from './types'\nimport { SwiperArrows } from '../../components'\n\nconst ProductPreview: React.FC<IProductPreview> = ({ thumbsSwiper, images }): JSX.Element => {\n  const nextRef = useRef(null)\n  const prevRef = useRef(null)\n\n  const slides = images?.map((item, index) => {\n    return (\n      <SwiperSlide key={index}>\n        <img className='product__image-preview' src={item.image} alt='image' />\n      </SwiperSlide>\n    )\n  })\n\n  return (\n    <li className='product__preview'>\n      <Swiper\n        loop\n        spaceBetween={40}\n        thumbs={{ swiper: thumbsSwiper && !thumbsSwiper.destroyed ? thumbsSwiper : null }}\n        modules={[FreeMode, Navigation, Thumbs]}\n        navigation={{\n          prevEl: prevRef.current,\n          nextEl: nextRef.current,\n        }}\n        onBeforeInit={(swiper: any) => {\n          swiper.params.navigation.prevEl = prevRef.current\n          swiper.params.navigation.nextEl = nextRef.current\n        }}\n      >\n        {slides}\n      </Swiper>\n      <SwiperArrows prevRef={prevRef} nextRef={nextRef} widthValue={105} />\n    </li>\n  )\n}\n\nexport default memo(ProductPreview)\n","import { API_URL, getProductUrl } from '../configs/config'\nimport { axiosClassic } from '../api/interceptors'\n\nexport const ProductService = {\n  async getProduct(id: string) {\n    const { data } = await axiosClassic.get(`${API_URL}${getProductUrl(`/${id}`)}`)\n    return data\n  },\n}\n","import React, { memo, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useQuery } from 'react-query'\nimport ProductParams from './ProductParams'\nimport ProductSpecs from './ProductSpecs'\nimport ProductSlides from './ProductSlides'\nimport ProductPreview from './ProductPreview'\nimport { ProductService } from '../../services/product.service'\n\nconst Product: React.FC = (): JSX.Element => {\n  const [thumbsSwiper, setThumbsSwiper] = useState(null)\n  const { productId } = useParams()\n  const { data, isSuccess } = useQuery('get product', () => ProductService.getProduct(productId))\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    isSuccess && (\n      <section className='product'>\n        <ul className='product__wrapper'>\n          <ProductPreview thumbsSwiper={thumbsSwiper} images={data.productImages} />\n          <ProductParams product={data} />\n          <ProductSlides setThumbsSwiper={setThumbsSwiper} images={data.productImages} />\n          <ProductSpecs specs={data.specs} />\n        </ul>\n      </section>\n    )\n  )\n}\n\nexport default memo(Product)\n"],"names":["createSvgIcon","_jsx","d","ProductParams","product","useState","isLiked","setIsLiked","currentColor","useProduct","favorites","getFavoriteFromLS","useActions","addItemForBasket","openAlertBar","setCurrentColor","setItemIsLiked","isFavorite","some","favorite","_id","existColors","COLORS","item","isExist","colors","color","nameColor","exist","useEffect","Object","keys","length","find","index","indexOf","ChipSuccess","Chip","label","variant","ChipError","className","getPrefixTitle","getPriceWithFormat","oldPrice","price","map","obj","isActive","style","border","Button","onClick","borderRadius","backgroundColor","transition","CloseOutlined","description","disabled","fontSize","fontWeight","size","type","message","title","basketItem","getBasketItem","placement","IconButton","handleChangeFavorite","Favorite","FavoriteBorder","memo","ProductSpecs","specs","SPECS_NAME","name","specsNameId","values","ProductSlides","setThumbsSwiper","images","navSlides","src","image","alt","onSwiper","spaceBetween","slidesPerView","freeMode","watchSlidesProgress","modules","Thumbs","ProductPreview","thumbsSwiper","nextRef","useRef","prevRef","slides","loop","thumbs","swiper","destroyed","FreeMode","Navigation","navigation","prevEl","current","nextEl","onBeforeInit","params","widthValue","ProductService","id","axiosClassic","API_URL","getProductUrl","data","Product","productId","useParams","useQuery","isSuccess","window","scrollTo","productImages"],"sourceRoot":""}